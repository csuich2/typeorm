# Javascript Node CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
version: 2.1

executors:
  mariadb:
    docker:
      - image: circleci/node:10.15.0
      - image: mariadb:10.1.37
        name: mariadb
        environment:
          MYSQL_ROOT_PASSWORD: "admin"
          MYSQL_USER: "test"
          MYSQL_PASSWORD: "test"
          MYSQL_DATABASE: "test"
  mongodb:
    docker:
      - image: circleci/node:10.15.0
      - image: circleci/mongo:3.4.18
  mssql:
    docker:
      - image: circleci/node:10.15.0
      - image: "mcr.microsoft.com/mssql/server:2017-GA-ubuntu"
        environment:
          SA_PASSWORD: "Admin12345"
          ACCEPT_EULA: "Y"
  mysql:
    docker:
      - image: circleci/node:10.15.0
      - image: mysql:5.7.24
        environment:
          MYSQL_ROOT_PASSWORD: "admin"
          MYSQL_USER: "test"
          MYSQL_PASSWORD: "test"
          MYSQL_DATABASE: "test"
  oracle:
    docker:
      - image: circleci/node:10.15.0
      # TODO oracle is skipped right now - not sure what image to use for the DB
  postgres:
    docker:
      - image: circleci/node:10.15.0
      - image: circleci/postgres:9.6.11-postgis
        environment:
          POSTGRES_USER: "test"
          POSTGRES_PASSWORD: "test"
          POSTGRES_DB: "test"
  sqlite:
    docker:
      - image: circleci/node:10.15.0 # sqlite doesn't require another image
  sqljs:
    docker:
      - image: circleci/node:10.15.0 # sqljs doesn't require another image

commands:
  prepare-for-tests:
    parameters:
      node_folder:
        type: enum
        enum:
          - node8
          - node10
          - node12
    steps:
      - attach_workspace:
          at: ~/typeorm/
      - run: sudo npm install -g npm@latest
      - run: cp ormconfig.circleci.json ormconfig.json

      # Download and cache dependencies
      - restore_cache:
          keys:
            - << parameters.node_folder >>-v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - << parameters.node_folder >>-v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: << parameters.node_folder >>-v1-dependencies-{{ checksum "package.json" }}

      - run: npm run lint
      - run: npm run compile

  run-db-tests:
    parameters:
      database:
        type: enum
        enum:
          - mariadb
          - mongodb
          - mssql
          - mysql
          - oracle
          - postgres
          - sqlite
          - sqljs
    steps:
      - attach_workspace:
          at: ~/typeorm/
      - run: cp ormconfigs/ormconfig.<< parameters.database >>.json ormconfig.json
      - run: npm run test-fast # test-fast since we already compiled

jobs:
  checkout_code:
    docker:
      - image: circleci/node:10.15.0
    working_directory: ~/typeorm/checkout/
    steps:
      - checkout
      - run:
          name: Copy source for node versions
          command: |
            mkdir ~/typeorm/node8/
            mkdir ~/typeorm/node10/
            mkdir ~/typeorm/node12/

            cp -R ~/typeorm/checkout/. ~/typeorm/node8/
            cp -R ~/typeorm/checkout/. ~/typeorm/node10/
            cp -R ~/typeorm/checkout/. ~/typeorm/node12/
      - persist_to_workspace:
          root: ~/typeorm/
          paths:
            - ./checkout/
            - ./node8/
            - ./node10/
            - ./node12

  prep-node8: &test-template
    working_directory: ~/typeorm/node8/
    docker:
      - image: circleci/node:8.16.1
    steps:
      - prepare-for-tests:
          node_folder: node8
      - persist_to_workspace:
          root: ~/typeorm/
          paths:
            - ./node8/

  mariadb-node8: &mariadb-template
    executor: mariadb
    working_directory: ~/typeorm/node8/
    steps:
      - run-db-tests:
          database: mariadb

  mongodb-node8: &mongodb-template
    executor: mongodb
    working_directory: ~/typeorm/node8/
    steps:
      - run-db-tests:
          database: mongodb

  mssql-node8: &mssql-template
    executor: mssql
    working_directory: ~/typeorm/node8/
    steps:
      - run-db-tests:
          database: mssql

  mysql-node8: &mysql-template
    executor: mysql
    working_directory: ~/typeorm/node8/
    steps:
      - run-db-tests:
          database: mysql

  oracle-node8: &oracle-template
    executor: oracle
    working_directory: ~/typeorm/node8/
    steps:
      - run-db-tests:
          database: oracle

  postgres-node8: &postgres-template
    executor: postgres
    working_directory: ~/typeorm/node8/
    steps:
      - run-db-tests:
          database: postgres

  sqlite-node8: &sqlite-template
    executor: sqlite
    working_directory: ~/typeorm/node8/
    steps:
      - run: npm install sqlite3
      - run-db-tests:
          database: sqlite

  sqljs-node8: &sqljs-template
    executor: sqljs
    working_directory: ~/typeorm/node8/
    steps:
      - run-db-tests:
          database: sqljs

  prep-node10:
    <<: *test-template
    working_directory: ~/typeorm/node10/
    docker:
      - image: circleci/node:10.16.3
    steps:
      - prepare-for-tests:
          node_folder: node8
      - persist_to_workspace:
          root: ~/typeorm/
          paths:
            - ./node10/

  mariadb-node10:
    <<: *mariadb-template
    working_directory: ~/typeorm/node10/

  mongodb-node10:
    <<: *mongodb-template
    working_directory: ~/typeorm/node10/

  mssql-node10:
    <<: *mssql-template
    working_directory: ~/typeorm/node10/

  mysql-node10:
    <<: *mysql-template
    working_directory: ~/typeorm/node10/

  oracle-node10:
    <<: *oracle-template
    working_directory: ~/typeorm/node10/

  postgres-node10:
    <<: *postgres-template
    working_directory: ~/typeorm/node10/

  sqlite-node10:
    <<: *sqlite-template
    working_directory: ~/typeorm/node10/

  sqljs-node10:
    <<: *sqljs-template
    working_directory: ~/typeorm/node10/

  prep-node12:
    <<: *test-template
    working_directory: ~/typeorm/node12/
    docker:
      - image: circleci/node:12.10.0
    steps:
      - prepare-for-tests:
          node_folder: node8
      - persist_to_workspace:
          root: ~/typeorm/
          paths:
            - ./node12

  mariadb-node12:
    <<: *mariadb-template
    working_directory: ~/typeorm/node12/

  mongodb-node12:
    <<: *mongodb-template
    working_directory: ~/typeorm/node12/

  mssql-node12:
    <<: *mssql-template
    working_directory: ~/typeorm/node12/

  mysql-node12:
    <<: *mysql-template
    working_directory: ~/typeorm/node12/

  oracle-node12:
    <<: *oracle-template
    working_directory: ~/typeorm/node12/

  postgres-node12:
    <<: *postgres-template
    working_directory: ~/typeorm/node12/

  sqlite-node12:
    <<: *sqlite-template
    working_directory: ~/typeorm/node12/

  sqljs-node12:
    <<: *sqljs-template
    working_directory: ~/typeorm/node12/

workflows:
  version: 2
  test:
    jobs:
      - checkout_code

      - prep-node8:
          requires:
            - checkout_code
      - mariadb-node8:
          requires:
            - prep-node8
      - mongodb-node8:
          requires:
            - prep-node8
      - mssql-node8:
          requires:
            - prep-node8
      - mysql-node8:
          requires:
            - prep-node8
      - oracle-node8:
          requires:
            - prep-node8
      - postgres-node8:
          requires:
            - prep-node8
      - sqlite-node8:
          requires:
            - prep-node8
      - sqljs-node8:
          requires:
            - prep-node8

      - prep-node10:
          requires:
            - checkout_code
      - mariadb-node10:
          requires:
            - prep-node10
      - mongodb-node10:
          requires:
            - prep-node10
      - mssql-node10:
          requires:
            - prep-node10
      - mysql-node10:
          requires:
            - prep-node10
      - oracle-node10:
          requires:
            - prep-node10
      - postgres-node10:
          requires:
            - prep-node10
      - sqlite-node10:
          requires:
            - prep-node10
      - sqljs-node10:
          requires:
            - prep-node10

      - prep-node12:
          requires:
            - checkout_code
      - mariadb-node12:
          requires:
            - prep-node12
      - mongodb-node12:
          requires:
            - prep-node12
      - mssql-node12:
          requires:
            - prep-node12
      - mysql-node12:
          requires:
            - prep-node12
      - oracle-node12:
          requires:
            - prep-node12
      - postgres-node12:
          requires:
            - prep-node12
      - sqlite-node12:
          requires:
            - prep-node12
      - sqljs-node12:
          requires:
            - prep-node12
